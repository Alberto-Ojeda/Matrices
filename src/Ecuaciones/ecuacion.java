/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ecuaciones;


import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author alberto
 */
public class ecuacion extends javax.swing.JFrame {

    int n;
    DefaultTableModel modelo = new DefaultTableModel();

    public int getN() {
        return n;
    }

    public void setN(int n) {
        this.n = n;
    }
    boolean ban = false;

    /**
     * Creates new form ecuacion
     */
    public ecuacion() {
        initComponents();
               this.setTitle("MATRIZ" );
        this.setLocationRelativeTo(this);
        this.setResizable(false);

        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jButton12 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        jButton11 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea = new javax.swing.JTextArea();
        jButton13 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Eras Light ITC", 1, 14)); // NOI18N
        jLabel2.setForeground(java.awt.Color.white);
        jLabel2.setText("DAME EL TAMAÃ‘O");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 60, 160, 40));

        jButton12.setFont(new java.awt.Font("Eras Light ITC", 0, 13)); // NOI18N
        jButton12.setText("GENERAR");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton12, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, -1, -1));

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "x"
            }
        ));
        jScrollPane1.setViewportView(tabla);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 420, 290));

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 110, 180, 30));

        jButton11.setText("RESOLVER");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton11, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 510, -1, -1));

        jTextArea.setColumns(20);
        jTextArea.setRows(5);
        jScrollPane2.setViewportView(jTextArea);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 180, 360, 300));

        jButton13.setFont(new java.awt.Font("Eras Light ITC", 0, 13)); // NOI18N
        jButton13.setText("Nueva matriz");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton13, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 510, -1, -1));

        jLabel3.setFont(new java.awt.Font("Eras Light ITC", 1, 18)); // NOI18N
        jLabel3.setForeground(java.awt.Color.white);
        jLabel3.setText("SOLUCION DE LA MATRIZ (GAUSS JORDAN)");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 120, -1, 20));

        jButton1.setFont(new java.awt.Font("Eras Light ITC", 0, 13)); // NOI18N
        jButton1.setText("REGRESAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/fondoA.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 930, 610));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        try {
            n = Integer.parseInt(jTextField1.getText());
            if (n <= 1) {
                System.out.println("invalido");
            }
            Object colum[] = new Object[n + 1];
            for (int i = 0; i < n + 1; i++) {
                if (i < n) {
                    colum[i] = "x" + (i + 1);

                } else {
                    colum[i] = "d" + (i + 1);
                }
            }

            modelo = new DefaultTableModel(colum, n);
            tabla.setModel(modelo);

        } catch (Exception e) {

        }

        /*int n = Integer.parseInt(jTextField1.getText());
int[][] matriz = new int[n][n];
matriz= this.Prueba1(n);
this.mostrarmatriz(matriz, n);*/
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed

        try {

            int n = this.getN();
            double m[][] = new double[n][n];// almacena los coeficientes de la matriz aumentada 
            double r[] = new double[n];// almacena al valor de la solucion de cada ecuacion
            for (int i = 0; i < n; i++) {

                for (int j = 0; j < n; j++) {
                    m[i][j] = Double.parseDouble(String.valueOf(tabla.getValueAt(i, j)));

                }
                r[i] = Double.parseDouble(String.valueOf(tabla.getValueAt(i, n)));
            }

            r = this.resolver(m, r);

            //lo que hace esta linea es que pasamos a mostrarla solucion en el area de texto
            //por eso es que utilizamos nuestra area de texto y con append le decimos lo que queremosque aparezca
            //con this mandamos a traer nuestro metodo resolvero
            
            for (int i = 0; i < n; i++) {
                jTextArea.append("x" + (i + 1) + " = " + r[i] + "\n");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "error en la lectura de datos");

        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        jTextArea.setText("");
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        dispose();
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaInicio().setVisible(true);
            }
        });        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ecuacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ecuacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ecuacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ecuacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ecuacion().setVisible(true);
             }
        });

    }
    /*    public void mostrarmatriz(int matriz[][], int n) {

        DefaultTableModel tablita= (DefaultTableModel) tabla.getModel();
    tablita.setRowCount(n);
    tablita.setColumnCount(n);
    for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
    tabla.setValueAt(matriz[i][j], i, j);                
            }
        }

    }
    public int[][] Prueba1(int n){
        int[][] matriz = new int [n][n];
        int nlimite=n-1;
        int inicio=0;
                int c=1;
                while (c<=(n*n)) {
                    for (int i = inicio; i <= nlimite; i++) {
                        matriz[inicio][i]=c++;
                    }
                    for (int i = inicio+1; i <=nlimite; i++) {
                                   matriz[i][nlimite]=c++;
                    }
                    
                    for (int i = nlimite-1; i >= inicio; i--) {
                                   matriz[nlimite][i]=c++;
                    
                    }for (int i = nlimite-1; i >= inicio+1; i--) {
                                   matriz[i][inicio]=c++;
                    }
                    nlimite=nlimite-1;
                    inicio=inicio+1;
        }
                return matriz;
    }*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTable tabla;
    // End of variables declaration//GEN-END:variables
private javax.swing.JTextField jTextField2;

    private double[] resolver(double[][] m, double[] r) {
        for (int i = 0; i < n; i++) {
            double d = 0;
            double c = 0;
            d = m[i][i];
            jTextArea.append(Double.toString(1 / d) + "*fila" + (i + 1) + "\n");
            for (int j = 0; j < n; j++) {
                m[i][j] = ((m[i][j]) / d);
            }
            r[i] = ((r[i]) / d);

// nuestas operaciones de nuestra matriz aumentada
            for (int j = 0; j < n; j++) {

                for (int k = 0; k < n; k++) {
                    jTextArea.append(Double.toString(m[j][k]) + "\t");
                }
                jTextArea.append("|\t" + Double.toString(r[j]) + "\n");
            }
            jTextArea.append("\n\n");
            for (int x = 0; x < n; x++) {
                if (i != x) {
                    c = m[x][i];
                    jTextArea.append("-" + Double.toString(c) + " * fila" + (i + 1) + "+ fila" + (x + 1) + "\n");// mustra en pantalla las opraciones que se realizaran por fila
                    for (int y = 0; y < n; y++) {// se hace cero a todos los elemntos de la colunma que no sean el pivote
                        m[x][y] = m[x][y] - c * m[i][y];

                    }
                    r[x] = r[x] - c * r[i];

                    // paso a mostrar las opraciones realizadas en la matriz aumentada
                    for (int j = 0; j < n; j++) {

                        for (int k = 0; k < n; k++) {
                            jTextArea.append(Double.toString(m[j][k]) + "\t");
                        }
                        jTextArea.append("|\t" + Double.toString(r[j]) + "\n");
                    }
                    jTextArea.append("\n\n");
                }
            }
        }
        return r; // retorna nuestra sulucion
    }
}
